{"name":"Express Path","tagline":"Easy route mapping for Express","body":"[![Build Status](https://travis-ci.org/hyubs/express-path.png?branch=master)](https://travis-ci.org/hyubs/express-path)\r\n[![Dependency Status](https://gemnasium.com/hyubs/express-path.png)](https://gemnasium.com/hyubs/express-path)\r\n\r\n## Installation\r\n\r\nvia npm:\r\n\r\n```bash\r\n$ npm install express-path\r\n```\r\n\r\n## Usage\r\n\r\n### Express Application\r\n\r\nHere's a quick example on how to use this module with your Express application.\r\n\r\n```javascript\r\nvar express = require('express');\r\nvar app = express();\r\n\r\n// Your express settings here\r\n\r\n// Just before you start your http server, initialize express-path\r\nvar routes = [\r\n\t// Route mapping here\r\n];\r\nrequire('express-path').init(app, routes);\r\n```\r\n\r\n### Route Mapping\r\n\r\nThe 2nd parameter of `init()` is a 2-dimensional array in the format as shown below.\r\n\r\n```javascript\r\n[\r\n\t[urlPath, controllerMethod, httpRequestMethod],\r\n\t[urlPath, controllerMethod, httpRequestMethod],\r\n\t[urlPath, controllerMethod, httpRequestMethod], // etc\r\n]\r\n```\r\n\r\nExample\r\n\r\n```javascript\r\n[\r\n\t['/', 'index#index'],\r\n\t['users/add', 'users#add', 'post'],\r\n\t['users', 'users#list', 'get']\r\n]\r\n```\r\n\r\n* \t`urlPath` is the URL path relative to the root of your Node.JS app server.\r\n* \t`controllerMethod` is a \\# delimeted string containing the controller (the JS file) and the method (the JS function of the route).\r\n* \t`httpRequestMethod` is an optional parameter which tells Express which type of HTTP requests will be routed to the controller's method. Accepted parameters are listed below.\r\n\t* \tall (any HTTP request)\r\n\t*\tget\r\n\t* \tpost\r\n\t* \tput\r\n\t* \tdelete\r\n\r\n\r\n### Controllers/Methods\r\n\r\nJust follow the default Express routes file for your controllers.\r\n\r\n```javascript\r\n// For example this is in controllers/users.js\r\nexports.login = function(req, res){\r\n\r\n};\r\n```\r\n\r\nFor the sample code above, you need a route map like this:\r\n\r\n```javascript\r\nvar routes = [\r\n\t['/users/login', 'users#login']\r\n];\r\n\r\nrequire('express-path').init(app, routes);\r\n```\r\n\r\nYou can now go to `/users/login` to see your page.\r\n\r\n\r\n### Parameters\r\n\r\nYou can add a 3rd parameter in `init()` to set optional parameters.\r\n\r\nExample\r\n\r\n```javascript\r\nrequire('express-path').init(app, routes, { \"controllersPath\" : \"routes\" });\r\n```\r\n\r\n*\t`controllersPath` (string) - Defaults to \"controllers\"\r\n\r\n\tPath of the directory relative to the app's main script.\r\n\r\n\tExample:\r\n\r\n\t```bash\r\n\tcd /home/user/mynodeapp\r\n\tnode app.js\r\n\r\n\t# Express Path will try to look for your controllers in /home/user/mynodeapp/controllers\r\n\t```\r\n\r\n\r\n\r\n\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2013 Hyubs Ursua\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}